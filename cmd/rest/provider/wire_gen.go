// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provider

import (
	"capital-gains-api/cmd/rest/controller"
	"capital-gains-api/cmd/rest/handler"
	"capital-gains-api/cmd/rest/router"
	"capital-gains-api/internal/entity"
	"capital-gains-api/internal/service/operation"
	"capital-gains-api/internal/service/tax"
	"context"
	"github.com/google/wire"
)

// Injectors from wire.go:

func Initialize(ctx context.Context) (Wire, error) {
	finstate := entity.NewFinstate()
	iService := tax.NewService(finstate)
	operationIService := operation.NewService(iService)
	iController := controller.NewOperationTaxController(operationIService)
	handlerHandler := handler.NewHandler(iController, operationIService)
	routerRouter := router.NewHTTPRouter(handlerHandler)
	wire := newWire(routerRouter)
	return wire, nil
}

// wire.go:

type Wire struct {
	Router *router.Router
}

func newWire(httpRouter *router.Router) Wire {
	return Wire{
		Router: httpRouter,
	}
}

var cfg = wire.NewSet(
	newWire, router.NewHTTPRouter,
)

var handlers = wire.NewSet(handler.NewHandler)

var entities = wire.NewSet(entity.NewFinstate)

var services = wire.NewSet(tax.NewService, operation.NewService)

var controllers = wire.NewSet(controller.NewOperationTaxController)
